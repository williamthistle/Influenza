# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_2"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_2_wald_tests[[5]]
library(DESeq2)
library(data.table)
source("bulk_RNA_analysis_helper.R")
##### SETUP #####
# Read in count and metadata files
base_dir <- "C:/Users/williamthistle/Documents/GitHub/Influenza/"
data_dir <- "C:/Users/williamthistle/Documents/local_data_files/"
counts <- fread(paste0(data_dir, "rsem_genes_count.processed.txt"), header = T, sep = "\t")
placebo_metadata_file <- paste0(base_dir, "placebo_metadata_sheet.tsv")
placebo_metadata <- read.table(placebo_metadata_file, header = TRUE, sep = "\t")
# Take gene_id column from counts and use contents as the rownames of counts
row.names <- as.character(counts$gene_id)
counts <- counts[,2:ncol(counts)]
counts <- as.data.frame(counts)
rownames(counts) <- row.names
# Only keep metadata for bulk RNA-seq aliquots
placebo_metadata <- placebo_metadata[placebo_metadata$bulkRNA_seq == TRUE,]
# Add period into time point (by itself, time point isn't unique - we need period information
# to distinguish between D-1 in period 1 vs D-1 in period 2, for example)
placebo_metadata$time_point <- paste0(placebo_metadata$period, "_", placebo_metadata$time_point)
# Make time point names safe for DESeq2
placebo_metadata$time_point[placebo_metadata$time_point == '1_D1 predose'] <- '1_D_minus_1'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-2'] <- '2_D_minus_2'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-1'] <- '2_D_minus_1'
# Only keep aliquots in counts that are placebo bulk RNA-seq associated
kept_aliquots <- placebo_metadata$aliquot_id
counts <- counts[kept_aliquots]
# Sort columns in counts and rows in full_time_placebo_metadata so they're in same order (for DESeq2)
colnames(counts) <- sort(colnames(counts))
rownames(placebo_metadata) <- placebo_metadata$aliquot_id
rownames(placebo_metadata) <- sort(rownames(placebo_metadata))
# Drop aliquot ID column (it's stored in rownames)
placebo_metadata = subset(placebo_metadata, select = -c(aliquot_id))
# Probably OK to round expected counts from RSEM data. DESeq2 expects integers
counts <- round(counts)
# Currently not filtering sex associated genes
#sex_associated_genes <- find_sex_associated_genes(paste0(data_dir, "sex_associated_genes/"))
full_time_placebo_metadata <- placebo_metadata[placebo_metadata$subject_id
%in% names(table(placebo_metadata$subject_id)
[table(placebo_metadata$subject_id) == 10]),]
full_time_counts <- counts[rownames(full_time_placebo_metadata)]
# Order factor levels for period 1, period 2, and all time points
period_1_factors <- c("1_D_minus_1", "1_D2", "1_D8", "1_D28")
period_2_factors <- c("2_D_minus_2", "2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
all_factors <- c(period_1_factors, period_2_factors)
full_time_placebo_metadata$time_point <- as.factor(full_time_placebo_metadata$time_point)
levels(full_time_placebo_metadata$time_point) <- all_factors
full_time_placebo_metadata$sex <- as.factor(full_time_placebo_metadata$sex)
wald_time_point_analysis <- DESeqDataSetFromMatrix(countData = full_time_counts,
colData = full_time_placebo_metadata,
design = ~ time_point + sex)
wald_time_point_analysis <- DESeq(wald_time_point_analysis)
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_2"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
period_1_wald_tests[[1]]
period_1_wald_tests[[2]]
period_1_wald_tests[[3]]
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_2_wald_tests[[5]]
period_2_wald_tests[[1]]
period_2_more_metadata <- placebo_metadata[(placebo_metadata$time_point == "2_D_minus_1" |
placebo_metadata$time_point == "2_D8" |
placebo_metadata$time_point == "2_D28"),]
period_2_more_counts <- counts[rownames(period_2_more_metadata)]
period_2_more_metadata$time_point <- as.factor(period_2_more_metadata$time_point)
levels(period_2_more_metadata$time_point) <- c("2_D_minus_1", "2_D8", "2_D28")
period_2_more_metadata$sex <- as.factor(period_2_more_metadata$sex)
period_2_more_data_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_2_more_counts,
colData = period_2_more_metadata,
design = ~ time_point + sex)
period_2_more_data_time_point_analysis <- DESeq(period_2_more_data_time_point_analysis, test="LRT", reduced=~sex)
period_2_more_data_time_point_analysis_results <- results(period_2_more_data_time_point_analysis, alpha = 0.05)
period_2_more_data_time_point_analysis_results <- period_2_more_data_time_point_analysis_results[order(period_2_more_data_time_point_analysis_results$padj),]
period_2_more_data_time_point_analysis_results <- subset(period_2_more_data_time_point_analysis_results, padj < 0.05)
period_2_more_data_time_point_analysis_results
period_2_wald_tests[[1]]
full_time_placebo_metadata
full_time_placebo_metadata$time_point
table(full_time_placebo_metadata$time_point)
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_1"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_1_wald_tests[[1]]
period_1_wald_tests[[2]]
period_1_wald_tests[[3]]
period_1_wald_tests[[2]]
period_1_wald_tests[[1]]
period_1_wald_tests[[2]]
period_1_wald_tests[[3]]
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
rownames(period_2_wald_tests[[4]])
"SPATS2L" %in% rownames(period_2_wald_tests[[4]])
match("SPATS2L", rownames(period_2_wald_tests[[4]])
)
period_2_wald_tests[[4]]
period_2_wald_tests[[4]][43,]
period_2_wald_tests[[3]]
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_2"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_2_wald_tests[[5]]
period_2_contrasts
period_2_wald_tests[[1]]
period_2_wald_tests[[2]]
period_2_wald_tests[[3]]
period_2_wald_tests[[4]]
period_2_wald_tests[[5]]
wald_time_point_analysis
period_2_wald_tests[[1]]
period_2_more_data_time_point_analysis_results
period_2_time_point_analysis_results
period_2_subset_placebo_metadata <- period_2_placebo_metadata[(period_2_placebo_metadata$time_point == "2_D_minus_1" |
period_2_placebo_metadata$time_point == "2_D8" |
period_2_placebo_metadata$time_point == "2_D28"),]
library(DESeq2)
library(data.table)
source("bulk_RNA_analysis_helper.R")
##### SETUP #####
# Read in count and metadata files
base_dir <- "C:/Users/williamthistle/Documents/GitHub/Influenza/"
data_dir <- "C:/Users/williamthistle/Documents/local_data_files/"
counts <- fread(paste0(data_dir, "rsem_genes_count.processed.txt"), header = T, sep = "\t")
placebo_metadata_file <- paste0(base_dir, "placebo_metadata_sheet.tsv")
placebo_metadata <- read.table(placebo_metadata_file, header = TRUE, sep = "\t")
# Take gene_id column from counts and use contents as the rownames of counts
row.names <- as.character(counts$gene_id)
counts <- counts[,2:ncol(counts)]
counts <- as.data.frame(counts)
rownames(counts) <- row.names
# Only keep metadata for bulk RNA-seq aliquots
placebo_metadata <- placebo_metadata[placebo_metadata$bulkRNA_seq == TRUE,]
# Add period into time point (by itself, time point isn't unique - we need period information
# to distinguish between D-1 in period 1 vs D-1 in period 2, for example)
placebo_metadata$time_point <- paste0(placebo_metadata$period, "_", placebo_metadata$time_point)
# Make time point names safe for DESeq2
placebo_metadata$time_point[placebo_metadata$time_point == '1_D1 predose'] <- '1_D_minus_1'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-2'] <- '2_D_minus_2'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-1'] <- '2_D_minus_1'
# Only keep aliquots in counts that are placebo bulk RNA-seq associated
kept_aliquots <- placebo_metadata$aliquot_id
counts <- counts[kept_aliquots]
# Sort columns in counts and rows in full_time_placebo_metadata so they're in same order (for DESeq2)
colnames(counts) <- sort(colnames(counts))
rownames(placebo_metadata) <- placebo_metadata$aliquot_id
rownames(placebo_metadata) <- sort(rownames(placebo_metadata))
# Drop aliquot ID column (it's stored in rownames)
placebo_metadata = subset(placebo_metadata, select = -c(aliquot_id))
# Probably OK to round expected counts from RSEM data. DESeq2 expects integers
counts <- round(counts)
# Currently not filtering sex associated genes
#sex_associated_genes <- find_sex_associated_genes(paste0(data_dir, "sex_associated_genes/"))
full_time_placebo_metadata <- placebo_metadata[placebo_metadata$subject_id
%in% names(table(placebo_metadata$subject_id)
[table(placebo_metadata$subject_id) == 10]),]
full_time_counts <- counts[rownames(full_time_placebo_metadata)]
# Order factor levels for period 1, period 2, and all time points
period_1_factors <- c("1_D_minus_1", "1_D2", "1_D8", "1_D28")
period_2_factors <- c("2_D_minus_2", "2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
all_factors <- c(period_1_factors, period_2_factors)
period_1_placebo_metadata <- full_time_placebo_metadata[full_time_placebo_metadata$period == 1,]
period_1_counts <- counts[rownames(period_1_placebo_metadata)]
# Factorize time point (with associated factor levels) and sex
period_1_placebo_metadata$time_point <- as.factor(period_1_placebo_metadata$time_point)
levels(period_1_placebo_metadata$time_point) <- period_1_factors
period_1_placebo_metadata$sex <- as.factor(period_1_placebo_metadata$sex)
period_2_placebo_metadata <- full_time_placebo_metadata[full_time_placebo_metadata$period == 2,]
period_2_counts <- counts[rownames(period_2_placebo_metadata)]
# Factorize time point (with associated factor levels) and sex
period_2_placebo_metadata$time_point <- as.factor(period_2_placebo_metadata$time_point)
levels(period_2_placebo_metadata$time_point) <- period_2_factors
period_2_placebo_metadata$sex <- as.factor(period_2_placebo_metadata$sex)
full_time_placebo_metadata$time_point <- as.factor(full_time_placebo_metadata$time_point)
levels(full_time_placebo_metadata$time_point) <- all_factors
full_time_placebo_metadata$sex <- as.factor(full_time_placebo_metadata$sex)
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_2"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
period_2_more_metadata <- placebo_metadata[(placebo_metadata$time_point == "2_D_minus_1" |
placebo_metadata$time_point == "2_D8" |
placebo_metadata$time_point == "2_D28"),]
period_2_more_counts <- counts[rownames(period_2_more_metadata)]
period_2_more_metadata$time_point <- as.factor(period_2_more_metadata$time_point)
levels(period_2_more_metadata$time_point) <- c("2_D_minus_1", "2_D8", "2_D28")
period_2_more_metadata$sex <- as.factor(period_2_more_metadata$sex)
period_2_subset_placebo_metadata <- period_2_placebo_metadata[(period_2_placebo_metadata$time_point == "2_D_minus_1" |
period_2_placebo_metadata$time_point == "2_D8" |
period_2_placebo_metadata$time_point == "2_D28"),]
period_2_subset_counts <- counts[rownames(period_2_subset_placebo_metadata)]
period_2_subset_placebo_metadata$time_point <- as.character(period_2_subset_placebo_metadata$time_point)
period_2_subset_placebo_metadata$time_point <- factor(period_2_subset_placebo_metadata$time_point)
levels(period_2_subset_placebo_metadata$time_point) <- c("2_D_minus_1", "2_D8", "2_D28")
period_2_subset_placebo_metadata$sex <- as.factor(period_2_subset_placebo_metadata$sex)
period_2_subset_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_2_subset_counts,
colData = period_2_subset_placebo_metadata,
design = ~ time_point + sex)
period_2_subset_time_point_analysis <- DESeq(period_2_subset_time_point_analysis, test="LRT", reduced=~sex)
period_2_subset_time_point_analysis_results <- results(period_2_subset_time_point_analysis, alpha = 0.05)
period_2_subset_time_point_analysis_results <- period_2_subset_time_point_analysis_results[order(period_2_subset_time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
period_2_subset_time_point_analysis_results <- subset(period_2_subset_time_point_analysis_results, padj < 0.05)
period_2_subset_time_point_analysis_results
library(DESeq2)
library(data.table)
source("bulk_RNA_analysis_helper.R")
##### SETUP #####
# Read in count and metadata files
base_dir <- "C:/Users/williamthistle/Documents/GitHub/Influenza/"
data_dir <- "C:/Users/williamthistle/Documents/local_data_files/"
counts <- fread(paste0(data_dir, "rsem_genes_count.processed.txt"), header = T, sep = "\t")
placebo_metadata_file <- paste0(base_dir, "placebo_metadata_sheet.tsv")
placebo_metadata <- read.table(placebo_metadata_file, header = TRUE, sep = "\t")
# Take gene_id column from counts and use contents as the rownames of counts
row.names <- as.character(counts$gene_id)
counts <- counts[,2:ncol(counts)]
counts <- as.data.frame(counts)
rownames(counts) <- row.names
# Only keep metadata for bulk RNA-seq aliquots
placebo_metadata <- placebo_metadata[placebo_metadata$bulkRNA_seq == TRUE,]
# Add period into time point (by itself, time point isn't unique - we need period information
# to distinguish between D-1 in period 1 vs D-1 in period 2, for example)
placebo_metadata$time_point <- paste0(placebo_metadata$period, "_", placebo_metadata$time_point)
# Make time point names safe for DESeq2
placebo_metadata$time_point[placebo_metadata$time_point == '1_D1 predose'] <- '1_D_minus_1'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-2'] <- '2_D_minus_2'
placebo_metadata$time_point[placebo_metadata$time_point == '2_D-1'] <- '2_D_minus_1'
# Only keep aliquots in counts that are placebo bulk RNA-seq associated
kept_aliquots <- placebo_metadata$aliquot_id
counts <- counts[kept_aliquots]
# Sort columns in counts and rows in full_time_placebo_metadata so they're in same order (for DESeq2)
colnames(counts) <- sort(colnames(counts))
rownames(placebo_metadata) <- placebo_metadata$aliquot_id
rownames(placebo_metadata) <- sort(rownames(placebo_metadata))
# Drop aliquot ID column (it's stored in rownames)
placebo_metadata = subset(placebo_metadata, select = -c(aliquot_id))
# Probably OK to round expected counts from RSEM data. DESeq2 expects integers
counts <- round(counts)
# Currently not filtering sex associated genes
#sex_associated_genes <- find_sex_associated_genes(paste0(data_dir, "sex_associated_genes/"))
##### ALL 10 TIMEPOINTS (PERIOD 1, PERIOD 2, BOTH PERIODS) #####
# First, we will use subjects that have all 10 timepoints for our tests
full_time_placebo_metadata <- placebo_metadata[placebo_metadata$subject_id
%in% names(table(placebo_metadata$subject_id)
[table(placebo_metadata$subject_id) == 10]),]
full_time_counts <- counts[rownames(full_time_placebo_metadata)]
# Order factor levels for period 1, period 2, and all time points
period_1_factors <- c("1_D_minus_1", "1_D2", "1_D8", "1_D28")
period_2_factors <- c("2_D_minus_2", "2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
all_factors <- c(period_1_factors, period_2_factors)
# LRT TESTS
# First, we'll use LRT test to find genes that change across any time point
# However, we need to split up our analysis into two sets of time points,
# as vaccination and challenge are two separate key events that could significantly
# alter gene expression. So we'll split our analyses into period 1 and period 2
# PERIOD 1
# Only keep period 1 metadata and counts
period_1_placebo_metadata <- full_time_placebo_metadata[full_time_placebo_metadata$period == 1,]
period_1_counts <- counts[rownames(period_1_placebo_metadata)]
# Factorize time point (with associated factor levels) and sex
period_1_placebo_metadata$time_point <- as.factor(period_1_placebo_metadata$time_point)
levels(period_1_placebo_metadata$time_point) <- period_1_factors
period_1_placebo_metadata$sex <- as.factor(period_1_placebo_metadata$sex)
# Run DESeq2 analysis
period_1_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_1_counts,
colData = period_1_placebo_metadata,
design = ~ time_point + sex)
period_1_time_point_analysis <- DESeq(period_1_time_point_analysis, test="LRT", reduced = ~ sex)
period_1_time_point_analysis_results <- results(period_1_time_point_analysis, alpha = 0.05)
period_1_time_point_analysis_results <- period_1_time_point_analysis_results[order(period_1_time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
period_1_time_point_analysis_results <- subset(period_1_time_point_analysis_results, padj < 0.05)
# PERIOD 2
# Only keep period 2 metadata and counts
period_2_placebo_metadata <- full_time_placebo_metadata[full_time_placebo_metadata$period == 2,]
period_2_counts <- counts[rownames(period_2_placebo_metadata)]
# Factorize time point (with associated factor levels) and sex
period_2_placebo_metadata$time_point <- as.factor(period_2_placebo_metadata$time_point)
levels(period_2_placebo_metadata$time_point) <- period_2_factors
period_2_placebo_metadata$sex <- as.factor(period_2_placebo_metadata$sex)
# Run DESeq2 analysis
period_2_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_2_counts,
colData = period_2_placebo_metadata,
design = ~ time_point + sex)
period_2_time_point_analysis <- DESeq(period_2_time_point_analysis, test="LRT", reduced = ~ sex)
period_2_time_point_analysis_results <- results(period_2_time_point_analysis, alpha = 0.05)
period_2_time_point_analysis_results <- period_2_time_point_analysis_results[order(period_2_time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
period_2_time_point_analysis_results <- subset(period_2_time_point_analysis_results, padj < 0.05)
# BOTH PERIODS
# Factorize time point (with associated factor levels) and sex
full_time_placebo_metadata$time_point <- as.factor(full_time_placebo_metadata$time_point)
levels(full_time_placebo_metadata$time_point) <- all_factors
full_time_placebo_metadata$sex <- as.factor(full_time_placebo_metadata$sex)
# Run DESeq2 analysis
time_point_analysis <- DESeqDataSetFromMatrix(countData = full_time_counts,
colData = full_time_placebo_metadata,
design = ~ time_point + sex)
time_point_analysis <- DESeq(time_point_analysis, test="LRT", reduced=~sex)
time_point_analysis_results <- results(time_point_analysis, alpha = 0.05)
time_point_analysis_results <- time_point_analysis_results[order(time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
time_point_analysis_results <- subset(time_point_analysis_results, padj < 0.05)
# WALD (PAIRWISE) TESTS
wald_time_point_analysis <- DESeqDataSetFromMatrix(countData = full_time_counts,
colData = full_time_placebo_metadata,
design = ~ time_point + sex)
wald_time_point_analysis <- DESeq(wald_time_point_analysis)
period_1_baseline <- "1_D_minus_1"
period_2_baseline <- "2_D_minus_2"
period_1_contrasts <- c("1_D2", "1_D8", "1_D28")
period_2_contrasts <- c("2_D_minus_1", "2_D2", "2_D5", "2_D8", "2_D28")
period_1_wald_tests <- c()
period_2_wald_tests <- c()
# Period 1 Wald tests
index <- 1
for (current_contrast in period_1_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_1_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_1_wald_tests[[index]] <- current_results
index <- index + 1
}
# Period 2 Wald tests
index <- 1
for (current_contrast in period_2_contrasts) {
current_results <- results(wald_time_point_analysis, contrast = c("time_point", current_contrast, period_2_baseline),
alpha = 0.05)
current_results <- current_results[order(current_results$padj),]
current_results <- subset(current_results, padj < 0.05)
period_2_wald_tests[[index]] <- current_results
index <- index + 1
}
##### MORE DATA TIMEPOINTS (PERIOD 2) #####
# We have more data (46 aliquots versus 23) for 2_D-1, 2_D8, and 2_D28,
# so let's do LRT and Wald tests for that subset specifically
period_2_more_metadata <- placebo_metadata[(placebo_metadata$time_point == "2_D_minus_1" |
placebo_metadata$time_point == "2_D8" |
placebo_metadata$time_point == "2_D28"),]
period_2_more_counts <- counts[rownames(period_2_more_metadata)]
period_2_more_metadata$time_point <- as.factor(period_2_more_metadata$time_point)
levels(period_2_more_metadata$time_point) <- c("2_D_minus_1", "2_D8", "2_D28")
period_2_more_metadata$sex <- as.factor(period_2_more_metadata$sex)
# Run DESeq2 analysis
period_2_more_data_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_2_more_counts,
colData = period_2_more_metadata,
design = ~ time_point + sex)
period_2_more_data_time_point_analysis <- DESeq(period_2_more_data_time_point_analysis, test="LRT", reduced=~sex)
period_2_more_data_time_point_analysis_results <- results(period_2_more_data_time_point_analysis, alpha = 0.05)
period_2_more_data_time_point_analysis_results <- period_2_more_data_time_point_analysis_results[order(period_2_more_data_time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
period_2_more_data_time_point_analysis_results <- subset(period_2_more_data_time_point_analysis_results, padj < 0.05)
# Let's compare this result to 23 profiles for same time points and see whether we get more data than overall period 2 analysis
period_2_subset_placebo_metadata <- period_2_placebo_metadata[(period_2_placebo_metadata$time_point == "2_D_minus_1" |
period_2_placebo_metadata$time_point == "2_D8" |
period_2_placebo_metadata$time_point == "2_D28"),]
period_2_subset_counts <- counts[rownames(period_2_subset_placebo_metadata)]
# Factorize time point (with associated factor levels) and sex
period_2_subset_placebo_metadata$time_point <- as.character(period_2_subset_placebo_metadata$time_point)
period_2_subset_placebo_metadata$time_point <- factor(period_2_subset_placebo_metadata$time_point)
levels(period_2_subset_placebo_metadata$time_point) <- c("2_D_minus_1", "2_D8", "2_D28")
period_2_subset_placebo_metadata$sex <- as.factor(period_2_subset_placebo_metadata$sex)
# Run DESeq2 analysis
period_2_subset_time_point_analysis <- DESeqDataSetFromMatrix(countData = period_2_subset_counts,
colData = period_2_subset_placebo_metadata,
design = ~ time_point + sex)
period_2_subset_time_point_analysis <- DESeq(period_2_subset_time_point_analysis, test="LRT", reduced=~sex)
period_2_subset_time_point_analysis_results <- results(period_2_subset_time_point_analysis, alpha = 0.05)
period_2_subset_time_point_analysis_results <- period_2_subset_time_point_analysis_results[order(period_2_subset_time_point_analysis_results$padj),]
# Note that log2FoldChange is not part of LRT, so we should just ignore it
period_2_subset_time_point_analysis_results <- subset(period_2_subset_time_point_analysis_results, padj < 0.05)
